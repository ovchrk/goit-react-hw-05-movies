{"version":3,"file":"static/js/785.1a6ce6ec.chunk.js","mappings":"8LAyCA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAqB1B,OAnBAI,EAAAA,EAAAA,YAAU,WACMC,EAAQ,IAYtBC,CAVS,sCAAAC,OAAyCX,EAAO,YACzC,CACdY,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAKHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAE,GAAI,OAAIX,GAAUY,EAAAA,EAAAA,GAAKD,EAAKE,SAAS,IAC1CC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAAI,GAC/C,GAAG,CAACtB,IACJuB,QAAQE,IAAInB,IAEVoB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGrB,EAAQsB,OAAS,IAAKC,EAAAA,EAAAA,KAAA,OAAAF,SAAK,wCAC3BrB,EAAQwB,KAAI,SAAAC,GACX,OACEL,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAKI,EAAOC,UACZH,EAAAA,EAAAA,KAAA,KAAGI,UAAU,UAASN,SAAEI,EAAOG,YAFvBH,EAAOI,GAKrB,MAGN,C,sBCpCA,IAUIC,EAVY,WAIf,GAAoB,qBAATC,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXC,OAA0B,OAAOA,OAC5C,GAAsB,qBAAXC,EAAAA,EAA0B,OAAOA,EAAAA,EAC5C,MAAM,IAAIC,MAAM,iCACjB,CAEmBC,GAEnBC,EAAOC,QAAUA,EAAUP,EAAa1B,MAGpC0B,EAAa1B,QAChBiC,EAAAA,QAAkBP,EAAa1B,MAAMkC,KAAKR,IAG3CO,EAAQE,QAAUT,EAAaS,QAC/BF,EAAQG,QAAUV,EAAaU,QAC/BH,EAAQI,SAAWX,EAAaW,Q","sources":["components/Reviews/Reviews.js","../node_modules/node-fetch/browser.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetch = require('node-fetch');\n\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmY4ZmJiYzMwMTNlY2I1MDY0MGFmMDE0NDA1Nzc0YyIsInN1YiI6IjY0YjRlYTdiNjI5YjJjMDEzYzQzMDJhZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.GHtJMZzPbE8SRwlwTEx3-peT33LPisCOv3lEOiFCJVM',\n      },\n    };\n\n    fetch(url, options)\n      .then(res => res.json())\n      .then(json => setReviews([...json.results]))\n      .catch(err => console.error('error:' + err));\n  }, [movieId]);\n  console.log(reviews);\n  return (\n    <div>\n      {reviews.length < 1 && <div>There are no reviews on this movie.</div>}\n      {reviews.map(review => {\n        return (\n          <div key={review.id}>\n            <h3>{review.author}</h3>\n            <p className=\"caption\">{review.content}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Reviews;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","require","fetch","concat","method","headers","accept","Authorization","then","res","json","_toConsumableArray","results","catch","err","console","error","log","_jsxs","children","length","_jsx","map","review","author","className","content","id","globalObject","self","window","global","Error","getGlobal","module","exports","bind","Headers","Request","Response"],"sourceRoot":""}