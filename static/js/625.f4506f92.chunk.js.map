{"version":3,"file":"static/js/625.f4506f92.chunk.js","mappings":"sMA6CA,UA1Ca,SAAHA,GAA4B,IAAtBC,EAAcD,EAAdC,eACdC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACtBI,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACMC,EAAQ,IAWtBC,CATY,gDACI,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAE,GAAI,OAAIZ,GAAWa,EAAAA,EAAAA,GAAKD,EAAKE,SAAS,IAC3CC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAAI,GAC/C,GAAG,KAEDG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACxBtB,EAASuB,KAAI,SAAAC,GAA0B,IAAvBC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAC1B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAEHC,GAAE,WAAAC,OAAaN,GACfO,MAAO,CAAEC,KAAM/B,GACfgC,QAAS,WACPvC,EAAe8B,EACjB,EAAEH,SAAA,CAEDI,EACAC,IARIF,EAWX,KAGN,C,sBCxCA,IAUIU,EAVY,WAIf,GAAoB,qBAATC,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXC,OAA0B,OAAOA,OAC5C,GAAsB,qBAAXC,EAAAA,EAA0B,OAAOA,EAAAA,EAC5C,MAAM,IAAIC,MAAM,iCACjB,CAEmBC,GAEnBC,EAAOC,QAAUA,EAAUP,EAAa7B,MAGpC6B,EAAa7B,QAChBoC,EAAAA,QAAkBP,EAAa7B,MAAMqC,KAAKR,IAG3CO,EAAQE,QAAUT,EAAaS,QAC/BF,EAAQG,QAAUV,EAAaU,QAC/BH,EAAQI,SAAWX,EAAaW,Q","sources":["components/Home/Home.js","../node_modules/node-fetch/browser.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Home = ({ onMovieDetails }) => {\n  const [trending, setTrending] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetch = require('node-fetch');\n\n    const url = 'https://api.themoviedb.org/3/trending/all/day';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmY4ZmJiYzMwMTNlY2I1MDY0MGFmMDE0NDA1Nzc0YyIsInN1YiI6IjY0YjRlYTdiNjI5YjJjMDEzYzQzMDJhZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.GHtJMZzPbE8SRwlwTEx3-peT33LPisCOv3lEOiFCJVM',\n      },\n    };\n    fetch(url, options)\n      .then(res => res.json())\n      .then(json => setTrending([...json.results]))\n      .catch(err => console.error('error:' + err));\n  }, []);\n  return (\n    <div className=\"movie-list\">\n      {trending.map(({ id, title, name }) => {\n        return (\n          <Link\n            key={id}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            onClick={() => {\n              onMovieDetails(id);\n            }}\n          >\n            {title}\n            {name}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"names":["_ref","onMovieDetails","_useState","useState","_useState2","_slicedToArray","trending","setTrending","location","useLocation","useEffect","require","fetch","method","headers","accept","Authorization","then","res","json","_toConsumableArray","results","catch","err","console","error","_jsx","className","children","map","_ref2","id","title","name","_jsxs","Link","to","concat","state","from","onClick","globalObject","self","window","global","Error","getGlobal","module","exports","bind","Headers","Request","Response"],"sourceRoot":""}