{"version":3,"file":"static/js/166.a6fe91f8.chunk.js","mappings":"sMAyEA,UAtEe,SAAHA,GAA4B,IAADC,EAArBC,EAAcF,EAAdE,eAChBC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAuC,QAA5Bb,EAAGW,EAAaG,IAAI,gBAAQ,IAAAd,EAAAA,EAAI,GAC3Ce,GAAWC,EAAAA,EAAAA,MAkCjB,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBJ,EAAoB,CACRK,EAAQ,IAYtBC,CAVS,mDAAAC,OAAsDP,GAC/C,CACdQ,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAKHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAE,GAAI,OAAIpB,GAAUqB,EAAAA,EAAAA,GAAKD,EAAKrB,SAAS,IAC1CuB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAAI,GAC/C,CACF,GAAG,CAACjB,KAGFoB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAlCO,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEf,GAAkC,KAA9BD,EAAKE,SAASC,MAAMC,MACtB,OAAO9B,EAAgB,CAAC,GAE1BA,EAAgB,CAAE6B,MAAOH,EAAKE,SAASC,MAAMC,QAC7CJ,EAAKK,OACP,EAyB6BT,SAAA,EACvBU,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,uBAEdL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQX,SAAC,eAExBU,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYhB,SACxB5B,EAAQ6C,KAAI,SAAAC,GAA6B,IAA1BC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAClB,OACEV,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAEHC,GAAE,WAAApC,OAAaiC,GACfI,MAAO,CAAEC,KAAM3C,GACf4C,QAAS,WACP1D,EAAeoD,EACjB,EAAEnB,SAEDoB,GAPID,EAUX,QAIR,C,sBCpEA,IAUIO,EAVY,WAIf,GAAoB,qBAATC,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXC,OAA0B,OAAOA,OAC5C,GAAsB,qBAAXC,EAAAA,EAA0B,OAAOA,EAAAA,EAC5C,MAAM,IAAIC,MAAM,iCACjB,CAEmBC,GAEnBC,EAAOC,QAAUA,EAAUP,EAAazC,MAGpCyC,EAAazC,QAChBgD,EAAAA,QAAkBP,EAAazC,MAAMiD,KAAKR,IAG3CO,EAAQE,QAAUT,EAAaS,QAC/BF,EAAQG,QAAUV,EAAaU,QAC/BH,EAAQI,SAAWX,EAAaW,Q","sources":["components/Movies/Movies.js","../node_modules/node-fetch/browser.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = ({ onMovieDetails }) => {\n  const [results, setResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.elements.query.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (searchQuery !== '') {\n      const fetch = require('node-fetch');\n\n      const url = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}`;\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmY4ZmJiYzMwMTNlY2I1MDY0MGFmMDE0NDA1Nzc0YyIsInN1YiI6IjY0YjRlYTdiNjI5YjJjMDEzYzQzMDJhZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.GHtJMZzPbE8SRwlwTEx3-peT33LPisCOv3lEOiFCJVM',\n        },\n      };\n\n      fetch(url, options)\n        .then(res => res.json())\n        .then(json => setResults([...json.results]))\n        .catch(err => console.error('error:' + err));\n    }\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie name\"\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <div className=\"movie-list\">\n        {results.map(({ id, original_title }) => {\n          return (\n            <Link\n              key={id}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              onClick={() => {\n                onMovieDetails(id);\n              }}\n            >\n              {original_title}\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"names":["_ref","_searchParams$get","onMovieDetails","_useState","useState","_useState2","_slicedToArray","results","setResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","require","fetch","concat","method","headers","accept","Authorization","then","res","json","_toConsumableArray","catch","err","console","error","_jsxs","children","onSubmit","e","preventDefault","form","currentTarget","elements","query","value","reset","_jsx","type","name","autoComplete","autoFocus","placeholder","className","map","_ref2","id","original_title","Link","to","state","from","onClick","globalObject","self","window","global","Error","getGlobal","module","exports","bind","Headers","Request","Response"],"sourceRoot":""}